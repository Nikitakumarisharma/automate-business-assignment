{
  "info": {
    "name": "Digital Asset Management API",
    "description": "Complete Postman collection for testing the Digital Asset Management API with authentication, asset management, user management, analytics, and webhooks.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "nikita"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_user_email}}\",\n  \"password\": \"{{test_user_password}}\",\n  \"firstName\": \"{{test_user_firstname}}\",\n  \"lastName\": \"{{test_user_lastname}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            },
            "description": "Register a new user account. This endpoint creates a new user with email/password authentication."
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('user_token', response.data.token);",
                  "        pm.collectionVariables.set('user_id', response.data.user.id);",
                  "        console.log('User token saved:', response.data.token.substring(0, 20) + '...');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_user_email}}\",\n  \"password\": \"{{test_user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login with email and password. The response token is automatically saved to collection variables."
          },
          "response": []
        },
        {
          "name": "Google OAuth Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{google_test_email}}\",\n  \"name\": \"{{google_test_name}}\",\n  \"googleId\": \"{{google_test_id}}\",\n  \"picture\": \"{{google_test_picture}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/google",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "google"
              ]
            },
            "description": "Login/register using Google OAuth. Requires Google authentication data."
          },
          "response": []
        },
        {
          "name": "Get Current User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "me"
              ]
            },
            "description": "Get the current authenticated user's profile information."
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/refresh",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "refresh"
              ]
            },
            "description": "Refresh the JWT token before it expires."
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "logout"
              ]
            },
            "description": "Logout the current user session."
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration, login, and session management."
    },
    {
      "name": "Asset Management",
      "item": [
        {
          "name": "Upload Asset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "description",
                  "value": "Test asset upload",
                  "type": "text"
                },
                {
                  "key": "tags",
                  "value": "test,upload,sample",
                  "type": "text"
                },
                {
                  "key": "isPublic",
                  "value": "false",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/assets",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets"
              ]
            },
            "description": "Upload a new digital asset. Supports images, documents, and other file types."
          },
          "response": []
        },
        {
          "name": "Get User Assets",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/assets?page=1&limit=10&sortBy=created_at&sortOrder=desc",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "created_at"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            },
            "description": "Get paginated list of user's assets with sorting and filtering options."
          },
          "response": []
        },
        {
          "name": "Get All Assets (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/assets/all?page=1&limit=10",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "all"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all assets in the system (Admin only)."
          },
          "response": []
        },
        {
          "name": "Get Asset by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}"
              ]
            },
            "description": "Get detailed information about a specific asset."
          },
          "response": []
        },
        {
          "name": "Get Shared Asset (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/assets/shared/{{asset_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "shared",
                "{{asset_id}}"
              ]
            },
            "description": "Get a publicly shared asset without authentication."
          },
          "response": []
        },
        {
          "name": "Update Asset Metadata",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated asset description\",\n  \"tags\": [\"updated\", \"test\", \"asset\"],\n  \"isPublic\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}"
              ]
            },
            "description": "Update asset metadata including description, tags, and visibility."
          },
          "response": []
        },
        {
          "name": "Share Asset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{share_email}}\",\n  \"accessLevel\": \"view\",\n  \"expiresAt\": \"{{share_expiry}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}/share",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}",
                "share"
              ]
            },
            "description": "Share an asset with another user with specific access permissions."
          },
          "response": []
        },
        {
          "name": "Generate Download URL",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}/download",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}",
                "download"
              ]
            },
            "description": "Generate a secure download URL for an asset."
          },
          "response": []
        },
        {
          "name": "Delete Asset",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}"
              ]
            },
            "description": "Delete an asset and its associated files."
          },
          "response": []
        }
      ],
      "description": "Asset management endpoints for uploading, retrieving, updating, sharing, and deleting digital assets."
    },
    {
      "name": "User Management (Admin)",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users?page=1&limit=10&sortBy=created_at&sortOrder=desc",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "created_at"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            },
            "description": "Get paginated list of all users (Admin only)."
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/{{target_user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users",
                "{{target_user_id}}"
              ]
            },
            "description": "Get detailed information about a specific user (Admin only)."
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Updated\",\n  \"lastName\": \"Name\",\n  \"isActive\": true,\n  \"roles\": [\"user\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/{{target_user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users",
                "{{target_user_id}}"
              ]
            },
            "description": "Update user information including roles and status (Admin only)."
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/{{target_user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users",
                "{{target_user_id}}"
              ]
            },
            "description": "Delete a user account (Admin only)."
          },
          "response": []
        },
        {
          "name": "Get User's Assets",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/{{target_user_id}}/assets?page=1&limit=10",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users",
                "{{target_user_id}}",
                "assets"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all assets owned by a specific user (Admin only)."
          },
          "response": []
        },
        {
          "name": "Get User's Activity Logs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/{{target_user_id}}/activity?page=1&limit=20",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "users",
                "{{target_user_id}}",
                "activity"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Get activity logs for a specific user (Admin only)."
          },
          "response": []
        }
      ],
      "description": "User management endpoints for administrators to manage user accounts, roles, and monitor activity."
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Admin Overview Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/analytics/admin/overview?period=30d",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "analytics",
                "admin",
                "overview"
              ],
              "query": [
                {
                  "key": "period",
                  "value": "30d"
                }
              ]
            },
            "description": "Get comprehensive admin analytics overview (Admin only)."
          },
          "response": []
        },
        {
          "name": "Admin Storage Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/analytics/admin/storage",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "analytics",
                "admin",
                "storage"
              ]
            },
            "description": "Get storage usage analytics across all users (Admin only)."
          },
          "response": []
        },
        {
          "name": "Admin Activity Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/analytics/admin/activity?period=7d",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "analytics",
                "admin",
                "activity"
              ],
              "query": [
                {
                  "key": "period",
                  "value": "7d"
                }
              ]
            },
            "description": "Get system activity analytics and failed operations (Admin only)."
          },
          "response": []
        },
        {
          "name": "User Overview Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/analytics/user/overview?period=30d",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "analytics",
                "user",
                "overview"
              ],
              "query": [
                {
                  "key": "period",
                  "value": "30d"
                }
              ]
            },
            "description": "Get personal analytics overview for the authenticated user."
          },
          "response": []
        },
        {
          "name": "User Storage Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/analytics/user/storage",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "analytics",
                "user",
                "storage"
              ]
            },
            "description": "Get storage usage analytics for the authenticated user."
          },
          "response": []
        },
        {
          "name": "User Activity Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/analytics/user/activity?period=7d&limit=20",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "analytics",
                "user",
                "activity"
              ],
              "query": [
                {
                  "key": "period",
                  "value": "7d"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Get activity timeline for the authenticated user."
          },
          "response": []
        }
      ],
      "description": "Analytics endpoints for monitoring system usage, storage, and user activity."
    },
    {
      "name": "Webhooks",
      "item": [
        {
          "name": "Subscribe to Webhooks",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"webhookUrl\": \"{{webhook_test_url}}\",\n  \"events\": [\"asset.uploaded\", \"asset.deleted\", \"asset.shared\"],\n  \"secretKey\": \"{{webhook_secret}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/webhooks/subscribe",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "webhooks",
                "subscribe"
              ]
            },
            "description": "Subscribe to webhook events for real-time notifications."
          },
          "response": []
        },
        {
          "name": "Get Webhook Subscriptions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/webhooks/subscriptions",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "webhooks",
                "subscriptions"
              ]
            },
            "description": "Get list of user's webhook subscriptions."
          },
          "response": []
        },
        {
          "name": "Update Webhook Subscription",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"events\": [\"asset.uploaded\", \"asset.updated\"],\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/webhooks/subscriptions/{{webhook_subscription_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "webhooks",
                "subscriptions",
                "{{webhook_subscription_id}}"
              ]
            },
            "description": "Update an existing webhook subscription."
          },
          "response": []
        },
        {
          "name": "Delete Webhook Subscription",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/webhooks/subscriptions/{{webhook_subscription_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "webhooks",
                "subscriptions",
                "{{webhook_subscription_id}}"
              ]
            },
            "description": "Delete a webhook subscription."
          },
          "response": []
        },
        {
          "name": "Get Webhook Events",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/webhooks/events?page=1&limit=10",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "webhooks",
                "events"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get webhook event history for the user."
          },
          "response": []
        },
        {
          "name": "Get Webhook Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/webhooks/stats",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "webhooks",
                "stats"
              ]
            },
            "description": "Get webhook statistics and delivery metrics."
          },
          "response": []
        },
        {
          "name": "Test Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"webhookUrl\": \"{{webhook_test_url}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/webhooks/test",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "webhooks",
                "test"
              ]
            },
            "description": "Send a test webhook to verify the endpoint is working."
          },
          "response": []
        },
        {
          "name": "Receive Webhook (Test Endpoint)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-webhook-signature",
                "value": "{{webhook_signature}}",
                "description": "HMAC signature for webhook verification"
              },
              {
                "key": "x-webhook-event",
                "value": "asset.uploaded",
                "description": "Type of webhook event"
              },
              {
                "key": "x-webhook-timestamp",
                "value": "{{webhook_timestamp}}",
                "description": "Unix timestamp of the webhook"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eventType\": \"asset.uploaded\",\n  \"userId\": \"user-123\",\n  \"assetId\": \"asset-456\",\n  \"timestamp\": \"2024-01-15T10:30:00Z\",\n  \"data\": {\n    \"filename\": \"example.jpg\",\n    \"fileSize\": 1024000,\n    \"mimeType\": \"image/jpeg\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/webhooks/receive",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "webhooks",
                "receive"
              ]
            },
            "description": "Test endpoint for receiving webhooks (used for development/testing)."
          },
          "response": []
        }
      ],
      "description": "Webhook management endpoints for subscribing to events, managing subscriptions, and testing webhook delivery."
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "health"
              ]
            },
            "description": "Check the health status of the API server."
          },
          "response": []
        }
      ],
      "description": "System health monitoring endpoints."
    }
  ],
"event": [
  {
    "listen": "prerequest",
    "script": {
      "type": "text/javascript",
      "exec": [
        "// Generate timestamp for webhook testing",
        "pm.collectionVariables.set('webhook_timestamp', Math.floor(Date.now() / 1000));",
        "",
        "// Generate a sample webhook signature (for testing only)",
        "const secret = pm.collectionVariables.get('webhook_secret') || 'test-secret';",
        "const payload = JSON.stringify({",
        "  \"eventType\": \"asset.uploaded\",",
        "  \"userId\": \"user-123\",",
        "  \"assetId\": \"asset-456\",",
        "  \"timestamp\": \"2024-01-15T10:30:00Z\",",
        "  \"data\": {",
        "    \"filename\": \"example.jpg\",",
        "    \"fileSize\": 1024000,",
        "    \"mimeType\": \"image/jpeg\"",
        "  }",
        "});",
        "// Use CryptoJS instead of Node's crypto module",
        "const signature = CryptoJS.HmacSHA256(payload, secret).toString(CryptoJS.enc.Hex);",
        "pm.collectionVariables.set('webhook_signature', signature);"
      ]
    }
  }
],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "user_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "asset_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "target_user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "webhook_subscription_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_user_email",
      "value": "test@example.com",
      "type": "string"
    },
    {
      "key": "test_user_password",
      "value": "password123",
      "type": "string"
    },
    {
      "key": "test_user_firstname",
      "value": "Test",
      "type": "string"
    },
    {
      "key": "test_user_lastname",
      "value": "User",
      "type": "string"
    },
    {
      "key": "google_test_email",
      "value": "google@example.com",
      "type": "string"
    },
    {
      "key": "google_test_name",
      "value": "Google Test User",
      "type": "string"
    },
    {
      "key": "google_test_id",
      "value": "google-123456",
      "type": "string"
    },
    {
      "key": "google_test_picture",
      "value": "https://example.com/avatar.jpg",
      "type": "string"
    },
    {
      "key": "share_email",
      "value": "share@example.com",
      "type": "string"
    },
    {
      "key": "share_expiry",
      "value": "2024-12-31T23:59:59Z",
      "type": "string"
    },
    {
      "key": "webhook_test_url",
      "value": "https://webhook.site/test",
      "type": "string"
    },
    {
      "key": "webhook_secret",
      "value": "your-webhook-secret",
      "type": "string"
    },
    {
      "key": "webhook_signature",
      "value": "",
      "type": "string"
    },
    {
      "key": "webhook_timestamp",
      "value": "",
      "type": "string"
    }
  ]
}
